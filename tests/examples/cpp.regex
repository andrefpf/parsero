# Isso é um comentário

# Se o nome é igual a definição
# então essa é uma palavra reservada
for:for
int:int
float:float
return:return


in:in
try:try
except:except

# Expressões auxiliares
# estas expressões fazem parte das
# definições regulares de outras expressões
# portanto não serão criados autômatos finitos 
# para elas
digit: [0-9]
letter: [a-zA-Z]
inside_string: (\w|\d|_| |!|,)

# operadores
atr: =
eq: ==
ne: !=
lt: \<
le: \<=
gt: \>
ge: \>=
or: \|
dot: \.
comma: ,
colon: :
semicolon: ;
add: \+
sub: -
mul: \*
div: /
left_shift: \<\<
right_shift: \>\>
scope_resolution: ::
backslash: \\
open_bracket: \(
closing_bracket: \)
open_square_bracket: \[
closing_square_bracket: \]
open_curly_bracket: \{
closing_curly_bracket: \}

package: \<inside_string*\>
macro: #letter(letter|digit|_)*
string: "inside_string*"
line_comment: //(inside_string|")*\n
multiline_comment: /\*(inside_string|\s)*\*/
number: (\+|-)?digit+(\.digit*)?(e(\+|-)?digit+)?
identifier: letter(letter|digit|_)*
