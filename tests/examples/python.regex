# Isso é um comentário

# Se o nome é igual a definição
# então essa é uma palavra reservada
as:as
assert:assert
break:break
raise:raise
yield:yield
return:return
class:class
continue:continue
def:def
del:del
with:with
if:if
elif:elif
else:else
for:for
while:while
in:in
try:try
except:except
None:None
True:True
False:False
int:int
float:float

# Expressões auxiliares
# estas expressões fazem parte das
# definições regulares de outras expressões
# portanto não serão criados autômatos finitos 
# para elas
digit: [0-9]
letter: [a-zA-Z]
inside_string: (\w|\d|_| |!|,|\*)
inside_comment: (inside_string|")
inside_multiline_comment: (inside_comment|\s)
sign: (\+|-)
decimal: (\.digit*)
scientific_notation: (e(\+|-)?digit+)

comparator: (==|!=|\<|\>|\<=|\>=)
operator: (\+|-|\*|/|//|\||\<\<|\>\>)
atr: =
dot: \.
comma: ,
colon: :
identation: (    )
open_bracket: \(
closing_bracket: \)
open_square_bracket: \[
closing_square_bracket: \]
open_curly_bracket: \{
closing_curly_bracket: \}

string: "inside_string*"
line_comment: #inside_comment*\n
multiline_comment: """inside_multiline_comment*"""
number: (sign?)(digit+)(decimal?)(scientific_notation?)
id: (letter|_)(letter|digit|_)*
